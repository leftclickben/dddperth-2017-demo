service: image-watermark

plugins:
  - serverless-api-stage

custom:
  stage: "${opt:stage, self:provider.stage}"
  stageSettings:
    Variables:
      uploadsBucket: leftclick.dddperth-2017.uploads-${self:custom.stage}
      imagesBucket: leftclick.dddperth-2017.images-${self:custom.stage}
    MethodSettings:
      LoggingLevel: INFO

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-southeast-2
  iamRoleStatements:
    -
      Effect: Allow
      Action:
        - "s3:GetObject"
      Resource: "arn:aws:s3:::${self:custom.stageSettings.Variables.uploadsBucket}/*"
    -
      Effect: Allow
      Action:
        - "s3:PutObject"
        - "s3:PutObjectAcl"
      Resource: "arn:aws:s3:::${self:custom.stageSettings.Variables.imagesBucket}/*"
    -
      Effect: Allow
      Action:
        - "s3:ListBucket"
      Resource: "arn:aws:s3:::${self:custom.stageSettings.Variables.imagesBucket}"
    -
      Effect: Allow
      Action:
        - "ses:SendEmail"
      Resource: "arn:aws:ses:us-west-2:*:identity/*"

functions:
  processImage:
    handler: app/handlers/processImage.s3
    timeout: 30
    events:
      - s3:
          bucket: "${self:custom.stageSettings.Variables.uploadsBucket}"
          event: s3:ObjectCreated:*
  notify:
    handler: app/handlers/notify.s3
    events:
      - s3:
          bucket: "${self:custom.stageSettings.Variables.imagesBucket}"
          event: s3:ObjectCreated:*
  httpGet:
    handler: app/handlers/http.get
    events:
      - http:
          path: /
          method: get
